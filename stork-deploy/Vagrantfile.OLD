# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.define "debian8" do |guest|
    guest.vm.box = "minimal/jessie64"
    config.vm.provision "shell", path: "https://raw.githubusercontent.com/jjlauer/vagrant-provision/master/linux/bootstrap-java8.sh", args: "server-jre"
    config.vm.provision "shell", inline: "apt-get -y install unzip"
  end

  config.vm.define "ubuntu1404" do |guest|
    guest.vm.box = "minimal/trusty64"
    config.vm.provision "shell", path: "https://raw.githubusercontent.com/jjlauer/vagrant-provision/master/linux/bootstrap-java8.sh", args: "server-jre"
    config.vm.provision "shell", inline: "apt-get -y install unzip"
  end

  config.vm.define "centos7" do |guest|
    guest.vm.box = "minimal/centos7"
    config.vm.provision "shell", path: "https://raw.githubusercontent.com/jjlauer/vagrant-provision/master/linux/bootstrap-java8.sh", args: "server-jre"
    config.vm.provision "shell", inline: "yum install -y unzip"
  end

  #config.vm.define "centos6" do |guest|
  #  guest.vm.box = "minimal/centos6"
  #end

  #config.vm.define "solaris10" do |guest|
  #  guest.vm.box = "tnarik/solaris10-minimal"
  #end

  config.vm.define "openbsd58" do |guest|
    guest.vm.box = "boxcutter/openbsd58"
  end

  #config.vm.define "netbsd7" do |guest|
  #  guest.vm.box = "kja/netbsd-7-amd64"
  #end

  #config.vm.define "windows2012" do |guest|
  #  guest.vm.box = "mwrock/Windows2012R2"
  #end

  #config.vm.define "windowsnano" do |guest|
  #  guest.vm.box = "mwrock/WindowsNano"
  #end

  config.vm.define "freebsd102" do |guest|
    guest.vm.box = "bento/freebsd-10.2"
    # sudo pkg install openjdk8-jre
    # sudo mount -t fdescfs fdesc /dev/fd
    # sudo mount -t procfs proc /proc
  end
end
