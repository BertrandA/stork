#!/usr/bin/env sh

#
# Shell script to launch Python Fabric tool for rapid deployment
# of Stork-based apps.
#

# save current working directory
INITIAL_WORKING_DIR="`pwd`"

# change working directory to app home
PRGDIR=$(dirname "$0")
cd "$PRGDIR"

# application home is now current directory
APP_HOME="`pwd`"

# revert back to original working dir
cd "$INITIAL_WORKING_DIR"

buildTaskArgs()
{
   local args=$1
   local arg_name=$2
   local arg_val=$3

   if [ -z "$args" ]; then
     echo ":$arg_name=$arg_val"
   else
     echo "$args,$arg_name=$arg_val"
   fi
   echo
}

# process arguments -- strip out ones that go to deploy task
# need to be careful args do not clash with fabric's
ASSEMBLY=""
FABRIC_ARGS=""
while [ $# -gt 0 ]; do
    a=$1
	if [ "$a" = "--assembly" ]; then
		shift
		if [ $# -le 0 ]; then continue; fi
		ASSEMBLY=$1
	else
    	# does the argument need escaped?
    	if [ "$a" = `echo "$a" | sed 's/ //g'` ]; then
        	FABRIC_ARGS="$FABRIC_ARGS $a"
    	else
        	FABRIC_ARGS="$FABRIC_ARGS \"$a\""
    	fi
	fi
    shift
done

# build command line for deploy task
TASK_ARGS=""
if [ ! -z "$ASSEMBLY" ]; then
  TASK_ARGS=`buildTaskArgs "$TASK_ARGS" "assembly" "$ASSEMBLY"`
fi

# fab -H sea-web2.fizzed.lan deploy:assembly=../examples/hello-server-dropwizard/target/hello-server-dropwizard-1.0.0-SNAPSHOT.tar.gz
PYTHONDONTWRITEBYTECODE=1 fab --fabfile="$APP_HOME/fabfile.py" $FABRIC_ARGS deploy"$TASK_ARGS"
